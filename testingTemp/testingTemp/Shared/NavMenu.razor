@inject CounterState CounterState
@implements IDisposable

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">testingTemp</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="getdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> ChartJS
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="jsinterop">
                <span class="oi oi-list-rich" aria-hidden="true"></span> JS Interop
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="tempcomp">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Templated Component
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="dashboard">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Dashboard
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="auto">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Auto Complete
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="search">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Search Example
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="split">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Split Screen
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="http">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Http Client
            </NavLink>
        </li>
    </ul>
    <div>
        <!--Call the GetCurrentCount() method to get the current count-->
        <p style="color:white">Current Count: @CounterState.GetCurrentCount()</p>
    </div>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    /// <summary>
    /// Session state management, Event Handler and IDisposable
    /// </summary>

    //This method is called when the control is initialised
    protected override void OnInitialized()
    {
        //Subscribe to the StateChanged EventHandler
        CounterState.StateChanged += OnCounterStateAdvancedStateChange;
    }

    //This method is fired when the CounterState object invokes its StateHasChanged() method
    //This will cause this control to invoke its own StateHasChanged() method. Refreshing the page and displaying the updated counter value
    void OnCounterStateAdvancedStateChange(object sender, EventArgs e) => StateHasChanged();

    void IDisposable.Dispose()
    {
        //When this control is disposed of unscribe from the StateChanged EventHandler
        CounterState.StateChanged -= OnCounterStateAdvancedStateChange;
    }

}
