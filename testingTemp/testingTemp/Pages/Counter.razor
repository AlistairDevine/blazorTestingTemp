@page "/counter"
@using testingTemp.Models
@using System.Diagnostics
@inject IJSRuntime JsRuntime
@inject CounterState CounterState

<h1>Counter</h1>
<!--State management now call the GetCurrentCount() method to get the current count-->
<p>Current count: @CounterState.GetCurrentCount()</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<br />

<div class="row">
    <div class="col-md-4">
        <EditForm Model="@repair" OnValidSubmit="@ValidSubmit">
            <DataAnnotationsValidator />
            

            <div class="form-group">
                <label for="name">Name:</label>
                <InputText id="name" @bind-Value="repair.Name" class="form-control" />
                <ValidationMessage For="@(() => repair.Name)" />
            </div>

            <div class="form-group">
                <label for="notes">Job notes:</label>
                <InputTextArea id="notes" @bind-Value="repair.Notes" class="form-control" />
                <ValidationMessage For="@(() => repair.Notes)" />
            </div>

            <div class="form-group">
                <label for="trade">Type of work:</label>
                <InputSelect id="trade" type="text" @bind-Value="repair.Trade" >
                    <option value="">--Select Trade--</option>
                    <option value="Carpenter">Carpenter</option>
                    <option value="Electrician">Electrician</option>
                    <option value="Gas">Gas</option>
                    <option value="Plumber">Plumber</option>
                </InputSelect>
                <ValidationMessage For="@(() => repair.Trade)" />
            </div>

            <div class="form-group">
                <label for="hours">Hours worked:</label>
                <InputText id="hours" @bind-Value="repair.Hours" class="form-control" />
                <ValidationMessage For="@(() => repair.Hours)" />
            </div>

            <button type="submit">Save.</button>
        </EditForm>

        <div>
            <span id="resultJson"></span>
        </div>
    </div>
</div>

@code {
    private int currentCount = 0;

    private void IncrementCount()
    {
        //Session State management calls the GetCurrentCount method for the current count
        int CurrentCount = CounterState.GetCurrentCount();
        //Increment the counter
        CurrentCount++;
        //Set Current count on the Session State object
        CounterState.SetCurrentCount(CurrentCount);
    }

    private RepairForm repair = new RepairForm
    {
        Name = "John",
        Notes = "Sink, shower and toilet are broken.",
        Trade = "Plumber",
        Hours = "2"
    };

    private void ValidSubmit()
    {
        Debug.WriteLine("ValidSubmit");
    }

}
